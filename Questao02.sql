CREATE DATABASE Universidade;

USE Universidade;

CREATE TABLE IF NOT EXISTS Alunos (
    MAT INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    endereco VARCHAR(50) NOT NULL,
    cidade VARCHAR(30) NOT NULL
);

INSERT INTO Alunos(MAT,nome,endereco,cidade) 
VALUES
(2015010101, 'JOSE DE ALENCAR', 'RUA DAS ALMAS', 'NATAL'),
(2015010102, 'JOÃO JOSÉ', 'AVENIDA RUY CARNEIRO', 'JOÃO PESSOA'),
(2015010103, 'MARIA JOAQUINA', 'RUA CARROSSEL', 'RECIFE'),
(2015010104, 'MARIA DAS DORES', 'RUA DAS LADEIRAS', 'FORTALEZA'),
(2015010105, 'JOSUÉ CLAUDINO DOS SANTOS', 'CENTRO', 'NATAL'),
(2015010106, 'JOSUÉLISSON CLAUDINO DOS SANTOS', 'CENTRO', 'NATAL');

SELECT * FROM Alunos;

CREATE TABLE IF NOT EXISTS Disciplinas (
    COD_DISC CHAR(20) PRIMARY KEY,
    nome_disc VARCHAR(50) NOT NULL,
    carga_hor INT NOT NULL
);

INSERT INTO Disciplinas(COD_DISC,nome_disc,carga_hor) 
VALUES
('BD','BANCO DE DADOS',100),
('POO','PROGRAMAÇÃO COM ACESSO A BANCO DE DADOS',100),
('WEB','AUTORIA WEB',50),
('ENG','ENGENHARIA DE SOFTWARE',80);

SELECT * FROM Disciplinas;

CREATE TABLE IF NOT EXISTS Professores (
    COD_PROF INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    endereco VARCHAR(50) NOT NULL,
    cidade VARCHAR(30) NOT NULL
);

INSERT INTO Professores(COD_PROF,nome,endereco,cidade) 
VALUES
(212131, 'NICKERSON FERREIRA', 'RUA MANAÍRA', 'JOÃO PESSOA'),
(122135, 'ADORILSON BEZERRA', 'AVENIDA SALGADO FILHO', 'NATAL'),
(192011, 'DIEGO OLIVEIRA', 'AVENIDA ROBERTO FREIRE', 'NATAL');

SELECT * FROM Professores;

CREATE TABLE IF NOT EXISTS Turma (
    COD_DISC CHAR(20),
    INDEX (COD_DISC),
    COD_TURMA INT NOT NULL,
    COD_PROF INT NOT NULL,
    INDEX (COD_PROF),
    ANO INT,
    INDEX ANO (ANO ASC),
    horario VARCHAR(30) NOT NULL,
    PRIMARY KEY (COD_TURMA,COD_DISC,COD_PROF,ANO)
);

INSERT INTO Turma(COD_DISC,COD_TURMA,COD_PROF,ANO,horario) 
VALUES
('BD', 1, 212131, 2015, '11H-12H'),
('BD', 2, 212131, 2015, '13H-14H'),
('POO', 1, 192011, 2015, '08H-09H'),
('WEB', 1, 192011, 2015, '07H-08H'),
('ENG', 1, 122135, 2015, '10H-11H');

SELECT * FROM Turma;

CREATE TABLE IF NOT EXISTS Historico (
    MAT INT,
    INDEX (MAT),
    COD_DISC CHAR(20),
    INDEX (COD_DISC),
    COD_TURMA INT,
    INDEX (COD_TURMA),
    COD_PROF INT,
    INDEX (COD_PROF),
    ANO INT,
    INDEX (ANO),
    frequencia INT,
    nota INT,
    PRIMARY KEY (MAT,COD_DISC,COD_TURMA,COD_PROF,ANO)
);

INSERT INTO HISTORICO
VALUES
(2015010101, 'BD', 1, 212131, 2015, 10, 4),
(2015010102, 'BD', 2, 212131, 2015, 10, 5),
(2015010103, 'POO', 1, 192011, 2015, 8, 7),
(2015010104, 'WEB', 1, 192011, 2015, 4, 9),
(2015010105, 'ENG', 1, 122135, 2015, 1, 10),
(2015010106, 'WEB', 2, 192011, 2015, 9, 3);

SELECT * FROM Historico;

ALTER TABLE Turma ADD FOREIGN KEY(COD_DISC) REFERENCES Disciplinas(COD_DISC) ON DELETE CASCADE;
ALTER TABLE Turma ADD FOREIGN KEY(COD_PROF) REFERENCES Professores(COD_PROF) ON DELETE CASCADE;

ALTER TABLE Historico ADD FOREIGN KEY(MAT) REFERENCES Alunos(MAT) ON DELETE CASCADE;
ALTER TABLE Historico ADD FOREIGN KEY(COD_DISC) REFERENCES Turma(COD_DISC) ON DELETE CASCADE;
ALTER TABLE Historico ADD FOREIGN KEY(COD_TURMA) REFERENCES Turma(COD_TURMA) ON DELETE CASCADE;
ALTER TABLE Historico ADD FOREIGN KEY(COD_PROF) REFERENCES Turma(COD_PROF) ON DELETE CASCADE;
ALTER TABLE Historico ADD CONSTRAINT historico_ibfk_5 FOREIGN KEY(ANO) REFERENCES Turma(ANO) ON DELETE CASCADE;

SHOW TABLES;

/*a) Encontre a MAT dos alunos com nota em BD em 2015 menor que 5 (obs: BD =
código da disciplinas)*/
SELECT A.MAT AS Matricula, A.nome FROM Alunos A JOIN Historico H ON H.MAT=A.MAT
WHERE H.COD_DISC='BD' AND H.nota < 5;
/*RESULTADO: 2015010101	JOSE DE ALENCAR*/

/*b) Encontre a MAT e calcule a média das notas dos alunos na disciplina de POO
em 2015.*/
SELECT A.MAT as Matricula, A.nome, AVG(H.nota) FROM Alunos A JOIN Historico H ON H.MAT=A.MAT
WHERE H.COD_DISC='POO';
/*RESULTADO: 2015010103	MARIA JOAQUINA	7.0000*/

/*c) Encontre a MAT e calcule a média das notas dos alunos na disciplina de POO
em 2015 e que esta média seja superior a 6*/
SELECT A.MAT AS Matricula, A.nome, H.nota FROM Alunos A JOIN Historico H ON H.MAT=A.MAT
WHERE H.COD_DISC='POO' GROUP BY H.nota HAVING AVG(H.nota) > 6;
/*RESULTADO: 2015010103	MARIA JOAQUINA	7*/

/*d) Encontre quantos alunos não são de Natal*/
SELECT * FROM Alunos WHERE cidade <> 'NATAL';
/*
RESULTADO: 3
2015010102	JOÃO JOSÉ	AVENIDA RUY CARNEIRO	JOÃO PESSOA
2015010103	MARIA JOAQUINA	RUA CARROSSEL	    RECIFE
2015010104	MARIA DAS DORES	RUA DAS LADEIRAS	FORTALEZA
*/
			

